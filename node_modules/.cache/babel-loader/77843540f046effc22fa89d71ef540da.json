{"ast":null,"code":"var _jsxFileName = \"/Users/jongauer/Desktop/tictactoe-redo/src/components/Board.jsx\";\nimport React from \"react\";\nimport Square from \"/components/Square.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  function renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: props.squares[i],\n      onClick: () => props.onClick(i),\n      id: `squareNumber${i}`,\n      isGameEnder: props.isGameOver.isOver && props.isGameOver.gameEndingSquares.includes(i) ? true : false\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [0, 1, 2].map(row => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [0, 1, 2].map(square => {\n          return renderSquare(square + row * 3);\n        })\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Square","Board","props","renderSquare","i","squares","onClick","isGameOver","isOver","gameEndingSquares","includes","map","row","square"],"sources":["/Users/jongauer/Desktop/tictactoe-redo/src/components/Board.jsx"],"sourcesContent":["import React from \"react\";\nimport Square from \"/components/Square.jsx\"\n\nfunction Board(props) {\n    function renderSquare(i) {\n      return <Square value={props.squares[i]}\n                    onClick={()=>props.onClick(i)}\n                    key = {i}\n                    id={`squareNumber${i}`}\n                    isGameEnder={props.isGameOver.isOver && props.isGameOver.gameEndingSquares.includes(i)\n                                ? true : false}\n      />;\n    }\n      return (\n        <div>\n          {[0, 1, 2].map(row => {\n            return <div className=\"board-row\" key={row}>\n              {[0, 1, 2].map((square) => {\n                return renderSquare(square + row*3)\n              })}\n            </div>\n          })}\n         \n        </div>\n      );\n  }\n\n  export default Board;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAClB,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;IACvB,oBAAO,QAAC,MAAD;MAAQ,KAAK,EAAEF,KAAK,CAACG,OAAN,CAAcD,CAAd,CAAf;MACO,OAAO,EAAE,MAAIF,KAAK,CAACI,OAAN,CAAcF,CAAd,CADpB;MAGO,EAAE,EAAG,eAAcA,CAAE,EAH5B;MAIO,WAAW,EAAEF,KAAK,CAACK,UAAN,CAAiBC,MAAjB,IAA2BN,KAAK,CAACK,UAAN,CAAiBE,iBAAjB,CAAmCC,QAAnC,CAA4CN,CAA5C,CAA3B,GACC,IADD,GACQ;IAL5B,GAEcA,CAFd;MAAA;MAAA;MAAA;IAAA,QAAP;EAOD;;EACC,oBACE;IAAA,UACG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUO,GAAV,CAAcC,GAAG,IAAI;MACpB,oBAAO;QAAK,SAAS,EAAC,WAAf;QAAA,UACJ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUD,GAAV,CAAeE,MAAD,IAAY;UACzB,OAAOV,YAAY,CAACU,MAAM,GAAGD,GAAG,GAAC,CAAd,CAAnB;QACD,CAFA;MADI,GAAgCA,GAAhC;QAAA;QAAA;QAAA;MAAA,QAAP;IAKD,CANA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYH;;KAtBMX,K;AAwBP,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jongauer/Desktop/tictactoe/src/components/Moves.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Moves(props) {\n  // Depending on movesAscending in the state, the movelist will conditionally \n  // render either ascending or descending.\n  const listStyle = {\n    display: \"flex\",\n    flexDirection: props.gameState.movesAscending ? \"column\" : \"column-reverse\"\n  }; // The map function will make an array of list items, each of which contains\n  // a button with the move number and the player/coordinate of what was placed\n  // during that move. When clicked, the jumpTo function will run\n  // and backtrack the game to that turn.\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: listStyle,\n    children: props.history.map((step, moveNumber) => {\n      const description = moveNumber ? `Go to move no. ${moveNumber} (${props.current.clickedOrder[moveNumber - 1][0]} at ${props.current.clickedOrder[moveNumber - 1][1]})` : `Go to game start`;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => props.jumpTo(moveNumber),\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 36\n        }, this)\n      }, moveNumber, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Moves;\nexport default Moves;\n\nvar _c;\n\n$RefreshReg$(_c, \"Moves\");","map":{"version":3,"names":["React","Moves","props","listStyle","display","flexDirection","gameState","movesAscending","history","map","step","moveNumber","description","current","clickedOrder","jumpTo"],"sources":["/Users/jongauer/Desktop/tictactoe/src/components/Moves.jsx"],"sourcesContent":["import React from \"react\";\n\n  function Moves(props){\n    // Depending on movesAscending in the state, the movelist will conditionally \n    // render either ascending or descending.\n    const listStyle = {\n      display: \"flex\",\n      flexDirection: props.gameState.movesAscending ? \"column\" : \"column-reverse\"\n    }\n    // The map function will make an array of list items, each of which contains\n    // a button with the move number and the player/coordinate of what was placed\n    // during that move. When clicked, the jumpTo function will run\n    // and backtrack the game to that turn.\n    return <ul style={listStyle}>{props.history.map((step, moveNumber) => {\n      const description = moveNumber\n      ? `Go to move no. ${moveNumber} (${props.current.clickedOrder[moveNumber - 1][0]} at ${props.current.clickedOrder[moveNumber - 1][1]})`\n      : `Go to game start`;\n      return (<li key={moveNumber}><button onClick={()=> props.jumpTo(moveNumber)}>\n      {description} \n      </button></li>)})}</ul>\n  }\n\n  export default Moves;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEE,SAASC,KAAT,CAAeC,KAAf,EAAqB;EACnB;EACA;EACA,MAAMC,SAAS,GAAG;IAChBC,OAAO,EAAE,MADO;IAEhBC,aAAa,EAAEH,KAAK,CAACI,SAAN,CAAgBC,cAAhB,GAAiC,QAAjC,GAA4C;EAF3C,CAAlB,CAHmB,CAOnB;EACA;EACA;EACA;;EACA,oBAAO;IAAI,KAAK,EAAEJ,SAAX;IAAA,UAAuBD,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkB,CAACC,IAAD,EAAOC,UAAP,KAAsB;MACpE,MAAMC,WAAW,GAAGD,UAAU,GAC3B,kBAAiBA,UAAW,KAAIT,KAAK,CAACW,OAAN,CAAcC,YAAd,CAA2BH,UAAU,GAAG,CAAxC,EAA2C,CAA3C,CAA8C,OAAMT,KAAK,CAACW,OAAN,CAAcC,YAAd,CAA2BH,UAAU,GAAG,CAAxC,EAA2C,CAA3C,CAA8C,GADvG,GAE3B,kBAFH;MAGA,oBAAQ;QAAA,uBAAqB;UAAQ,OAAO,EAAE,MAAKT,KAAK,CAACa,MAAN,CAAaJ,UAAb,CAAtB;UAAA,UAC5BC;QAD4B;UAAA;UAAA;UAAA;QAAA;MAArB,GAASD,UAAT;QAAA;QAAA;QAAA;MAAA,QAAR;IAEgB,CANY;EAAvB;IAAA;IAAA;IAAA;EAAA,QAAP;AAOD;;KAlBQV,K;AAoBT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jongauer/Desktop/tictactoe-redo/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport $ from \"jquery\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Square;\n\nfunction Board(props) {\n  function renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: props.squares[i],\n      onClick: () => props.onClick(i),\n      id: `squareNumber${i}`\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  const toMap = [0, 1, 2];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: toMap.map(row => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: toMap.map(square => {\n          return renderSquare(square + row * 3);\n        })\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = Board;\n\nfunction Game() {\n  _s();\n\n  const [gameState, setGameState] = useState({\n    history: [{\n      squares: Array(9).fill(null),\n      clickedOrder: []\n    }],\n    stepNumber: 0,\n    xIsNext: true,\n    movesAscending: true\n  });\n\n  function handleClick(i) {\n    const history = gameState.history.slice(0, gameState.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    function findCoordinate(index) {\n      const coordinate = [];\n\n      switch (index) {\n        case 0:\n          coordinate.push(\"A-1\");\n          break;\n\n        case 1:\n          coordinate.push(\"A-2\");\n          break;\n\n        case 2:\n          coordinate.push(\"A-3\");\n          break;\n\n        case 3:\n          coordinate.push(\"B-1\");\n          break;\n\n        case 4:\n          coordinate.push(\"B-2\");\n          break;\n\n        case 5:\n          coordinate.push(\"B-3\");\n          break;\n\n        case 6:\n          coordinate.push(\"C-1\");\n          break;\n\n        case 7:\n          coordinate.push(\"C-2\");\n          break;\n\n        case 8:\n          coordinate.push(\"C-3\");\n          break;\n\n        default:\n          break;\n      }\n\n      gameState.xIsNext ? coordinate.unshift(\"X\") : coordinate.unshift(\"O\");\n      return coordinate;\n    }\n\n    const coordinate = findCoordinate(i);\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = gameState.xIsNext ? \"X\" : \"O\";\n    const oldClickedOrder = current.clickedOrder.slice();\n    oldClickedOrder.push(coordinate);\n    const newClickedOrder = oldClickedOrder.slice();\n    setGameState({\n      history: history.concat([{\n        squares: squares,\n        clickedOrder: newClickedOrder\n      }]),\n      stepNumber: history.length,\n      xIsNext: !gameState.xIsNext,\n      movesAscending: gameState.movesAscending\n    });\n  }\n\n  const history = gameState.history;\n  const current = history[gameState.stepNumber];\n  const winner = calculateWinner(current.squares);\n\n  function jumpTo(step) {\n    setGameState({\n      history: gameState.history.slice(0, step + 1),\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n      movesAscending: gameState.movesAscending\n    });\n  }\n\n  function Moves() {\n    const listStyle = {\n      display: \"flex\",\n      flexDirection: gameState.movesAscending ? \"column\" : \"column-reverse\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"ol\", {\n      style: listStyle,\n      children: history.map((step, moveNumber) => {\n        const description = moveNumber ? `Go to move no. ${moveNumber} (${current.clickedOrder[moveNumber - 1][0]} at ${current.clickedOrder[moveNumber - 1][1]})` : `Go to game start`;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => jumpTo(moveNumber),\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 38\n          }, this)\n        }, moveNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 14\n    }, this);\n  }\n\n  let status;\n\n  if (winner) {\n    status = `Winner: ${winner}`;\n  } else {\n    status = `Next player: ${gameState.xIsNext ? \"X\" : \"O\"}`;\n  }\n\n  function flipButtons() {\n    setGameState({ ...gameState,\n      movesAscending: !gameState.movesAscending\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: current.squares,\n        onClick: i => handleClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Moves, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: flipButtons,\n        children: \"Flip buttons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 7\n  }, this);\n} // ========================================\n\n\n_s(Game, \"YArNs/hMDbFR938xh0dGLupnnIo=\");\n\n_c3 = Game;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 171,\n  columnNumber: 13\n}, this));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      $(`#squareNumber{a}`).css(\"background-color\", \"red\");\n      $(`#squareNumber{b}`).css(\"background-color\", \"red\");\n      $(`#squareNumber{c}`).css(\"background-color\", \"red\");\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["React","useState","ReactDOM","$","Square","props","onClick","value","Board","renderSquare","i","squares","toMap","map","row","square","Game","gameState","setGameState","history","Array","fill","clickedOrder","stepNumber","xIsNext","movesAscending","handleClick","slice","current","length","findCoordinate","index","coordinate","push","unshift","calculateWinner","oldClickedOrder","newClickedOrder","concat","winner","jumpTo","step","Moves","listStyle","display","flexDirection","moveNumber","description","status","flipButtons","root","createRoot","document","getElementById","render","lines","a","b","c","css"],"sources":["/Users/jongauer/Desktop/tictactoe-redo/src/index.js"],"sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom/client';\nimport $ from \"jquery\";\nimport './index.css';\n\nfunction Square(props) {\n\n    return (\n      <button className=\"square\"\n              onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n  }\n\nfunction Board(props) {\n  function renderSquare(i) {\n    return <Square value={props.squares[i]}\n                  onClick={()=>props.onClick(i)}\n                  key = {i}\n                  id={`squareNumber${i}`}\n    />;\n  }\n\n  const toMap = [0, 1, 2]\n    return (\n      <div>\n        {toMap.map(row => {\n          return <div className=\"board-row\" key={row}>\n            {toMap.map((square) => {\n              return renderSquare(square + row*3)\n            })}\n          </div>\n        })}\n       \n      </div>\n    );\n  \n}\n\nfunction Game() {\n\n    const [gameState, setGameState] = useState({\n      history: [{\n              squares: Array(9).fill(null),\n              clickedOrder: []\n            }],\n      stepNumber: 0,\n      xIsNext: true,\n      movesAscending: true\n    })\n\n    function handleClick(i) {\n      const history = gameState.history.slice(0, gameState.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n\n      function findCoordinate(index) {\n        const coordinate = []\n        switch(index) {\n        case 0:\n          coordinate.push(\"A-1\");\n          break;\n        case 1:\n          coordinate.push(\"A-2\");\n          break;\n        case 2:\n          coordinate.push(\"A-3\");\n          break;\n        case 3:\n          coordinate.push(\"B-1\");\n          break;\n        case 4:\n          coordinate.push(\"B-2\");\n          break;\n        case 5:\n          coordinate.push(\"B-3\");\n          break;\n        case 6:\n          coordinate.push(\"C-1\");\n          break;\n        case 7:\n          coordinate.push(\"C-2\");\n          break;\n        case 8:\n          coordinate.push(\"C-3\");\n          break;\n        default:\n          break;\n      }\n      gameState.xIsNext ? coordinate.unshift(\"X\") : coordinate.unshift(\"O\");\n      return coordinate;\n    }\n      const coordinate = findCoordinate(i);\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n      squares[i] = gameState.xIsNext ? \"X\" : \"O\";\n      const oldClickedOrder = current.clickedOrder.slice();\n      oldClickedOrder.push(coordinate);\n      const newClickedOrder = oldClickedOrder.slice();\n      \n      setGameState({\n        history: history.concat([{\n          squares: squares,\n          clickedOrder: newClickedOrder\n        }]),\n        stepNumber: history.length,\n        xIsNext: !gameState.xIsNext,\n        movesAscending: gameState.movesAscending})\n    }\n\n    const history = gameState.history;\n    const current = history[gameState.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    function jumpTo(step) {\n      setGameState({\n        history: gameState.history.slice(0, step + 1),\n        stepNumber: step,\n        xIsNext: (step % 2) === 0,\n        movesAscending: gameState.movesAscending\n      });\n    }\n\n    function Moves(){\n      const listStyle = {\n        display: \"flex\",\n        flexDirection: gameState.movesAscending ? \"column\" : \"column-reverse\"\n      }\n      return <ol style={listStyle}>{history.map((step, moveNumber) => {\n        const description = moveNumber ? `Go to move no. ${moveNumber} (${current.clickedOrder[moveNumber - 1][0]} at ${current.clickedOrder[moveNumber - 1][1]})` : `Go to game start`;\n        return (<li key={moveNumber}><button onClick={()=> jumpTo(moveNumber)}>\n        {description} \n        </button></li>)})}</ol>\n    }\n\n    let status;\n    if (winner) {\n      status = `Winner: ${winner}`\n    } else {\n      status = `Next player: ${gameState.xIsNext ? \"X\" : \"O\"}`;\n    }\n\n    function flipButtons() {\n      setGameState({\n        ...gameState,\n        movesAscending: !gameState.movesAscending\n      })\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board squares={current.squares} onClick={(i)=> handleClick(i)}/>\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <Moves/>\n          <button onClick={flipButtons}>Flip buttons</button>\n        </div>\n      </div>\n    );\n  }\n\n\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<Game />);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      $(`#squareNumber{a}`).css(\"background-color\", \"red\");\n      $(`#squareNumber{b}`).css(\"background-color\", \"red\");\n      $(`#squareNumber{c}`).css(\"background-color\", \"red\");\n\n      return squares[a];\n    }\n  }\n  return null;\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,aAAP;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;EAEnB,oBACE;IAAQ,SAAS,EAAC,QAAlB;IACQ,OAAO,EAAEA,KAAK,CAACC,OADvB;IAAA,UAEGD,KAAK,CAACE;EAFT;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;KARMH,M;;AAUT,SAASI,KAAT,CAAeH,KAAf,EAAsB;EACpB,SAASI,YAAT,CAAsBC,CAAtB,EAAyB;IACvB,oBAAO,QAAC,MAAD;MAAQ,KAAK,EAAEL,KAAK,CAACM,OAAN,CAAcD,CAAd,CAAf;MACO,OAAO,EAAE,MAAIL,KAAK,CAACC,OAAN,CAAcI,CAAd,CADpB;MAGO,EAAE,EAAG,eAAcA,CAAE;IAH5B,GAEcA,CAFd;MAAA;MAAA;MAAA;IAAA,QAAP;EAKD;;EAED,MAAME,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAd;EACE,oBACE;IAAA,UACGA,KAAK,CAACC,GAAN,CAAUC,GAAG,IAAI;MAChB,oBAAO;QAAK,SAAS,EAAC,WAAf;QAAA,UACJF,KAAK,CAACC,GAAN,CAAWE,MAAD,IAAY;UACrB,OAAON,YAAY,CAACM,MAAM,GAAGD,GAAG,GAAC,CAAd,CAAnB;QACD,CAFA;MADI,GAAgCA,GAAhC;QAAA;QAAA;QAAA;MAAA,QAAP;IAKD,CANA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAaH;;MAvBQN,K;;AAyBT,SAASQ,IAAT,GAAgB;EAAA;;EAEZ,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC;IACzCkB,OAAO,EAAE,CAAC;MACFR,OAAO,EAAES,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADP;MAEFC,YAAY,EAAE;IAFZ,CAAD,CADgC;IAKzCC,UAAU,EAAE,CAL6B;IAMzCC,OAAO,EAAE,IANgC;IAOzCC,cAAc,EAAE;EAPyB,CAAD,CAA1C;;EAUA,SAASC,WAAT,CAAqBhB,CAArB,EAAwB;IACtB,MAAMS,OAAO,GAAGF,SAAS,CAACE,OAAV,CAAkBQ,KAAlB,CAAwB,CAAxB,EAA2BV,SAAS,CAACM,UAAV,GAAuB,CAAlD,CAAhB;IACA,MAAMK,OAAO,GAAGT,OAAO,CAACA,OAAO,CAACU,MAAR,GAAiB,CAAlB,CAAvB;IACA,MAAMlB,OAAO,GAAGiB,OAAO,CAACjB,OAAR,CAAgBgB,KAAhB,EAAhB;;IAEA,SAASG,cAAT,CAAwBC,KAAxB,EAA+B;MAC7B,MAAMC,UAAU,GAAG,EAAnB;;MACA,QAAOD,KAAP;QACA,KAAK,CAAL;UACEC,UAAU,CAACC,IAAX,CAAgB,KAAhB;UACA;;QACF,KAAK,CAAL;UACED,UAAU,CAACC,IAAX,CAAgB,KAAhB;UACA;;QACF,KAAK,CAAL;UACED,UAAU,CAACC,IAAX,CAAgB,KAAhB;UACA;;QACF,KAAK,CAAL;UACED,UAAU,CAACC,IAAX,CAAgB,KAAhB;UACA;;QACF,KAAK,CAAL;UACED,UAAU,CAACC,IAAX,CAAgB,KAAhB;UACA;;QACF,KAAK,CAAL;UACED,UAAU,CAACC,IAAX,CAAgB,KAAhB;UACA;;QACF,KAAK,CAAL;UACED,UAAU,CAACC,IAAX,CAAgB,KAAhB;UACA;;QACF,KAAK,CAAL;UACED,UAAU,CAACC,IAAX,CAAgB,KAAhB;UACA;;QACF,KAAK,CAAL;UACED,UAAU,CAACC,IAAX,CAAgB,KAAhB;UACA;;QACF;UACE;MA7BF;;MA+BFhB,SAAS,CAACO,OAAV,GAAoBQ,UAAU,CAACE,OAAX,CAAmB,GAAnB,CAApB,GAA8CF,UAAU,CAACE,OAAX,CAAmB,GAAnB,CAA9C;MACA,OAAOF,UAAP;IACD;;IACC,MAAMA,UAAU,GAAGF,cAAc,CAACpB,CAAD,CAAjC;;IAEA,IAAIyB,eAAe,CAACxB,OAAD,CAAf,IAA4BA,OAAO,CAACD,CAAD,CAAvC,EAA4C;MAC1C;IACD;;IACDC,OAAO,CAACD,CAAD,CAAP,GAAaO,SAAS,CAACO,OAAV,GAAoB,GAApB,GAA0B,GAAvC;IACA,MAAMY,eAAe,GAAGR,OAAO,CAACN,YAAR,CAAqBK,KAArB,EAAxB;IACAS,eAAe,CAACH,IAAhB,CAAqBD,UAArB;IACA,MAAMK,eAAe,GAAGD,eAAe,CAACT,KAAhB,EAAxB;IAEAT,YAAY,CAAC;MACXC,OAAO,EAAEA,OAAO,CAACmB,MAAR,CAAe,CAAC;QACvB3B,OAAO,EAAEA,OADc;QAEvBW,YAAY,EAAEe;MAFS,CAAD,CAAf,CADE;MAKXd,UAAU,EAAEJ,OAAO,CAACU,MALT;MAMXL,OAAO,EAAE,CAACP,SAAS,CAACO,OANT;MAOXC,cAAc,EAAER,SAAS,CAACQ;IAPf,CAAD,CAAZ;EAQD;;EAED,MAAMN,OAAO,GAAGF,SAAS,CAACE,OAA1B;EACA,MAAMS,OAAO,GAAGT,OAAO,CAACF,SAAS,CAACM,UAAX,CAAvB;EACA,MAAMgB,MAAM,GAAGJ,eAAe,CAACP,OAAO,CAACjB,OAAT,CAA9B;;EAEA,SAAS6B,MAAT,CAAgBC,IAAhB,EAAsB;IACpBvB,YAAY,CAAC;MACXC,OAAO,EAAEF,SAAS,CAACE,OAAV,CAAkBQ,KAAlB,CAAwB,CAAxB,EAA2Bc,IAAI,GAAG,CAAlC,CADE;MAEXlB,UAAU,EAAEkB,IAFD;MAGXjB,OAAO,EAAGiB,IAAI,GAAG,CAAR,KAAe,CAHb;MAIXhB,cAAc,EAAER,SAAS,CAACQ;IAJf,CAAD,CAAZ;EAMD;;EAED,SAASiB,KAAT,GAAgB;IACd,MAAMC,SAAS,GAAG;MAChBC,OAAO,EAAE,MADO;MAEhBC,aAAa,EAAE5B,SAAS,CAACQ,cAAV,GAA2B,QAA3B,GAAsC;IAFrC,CAAlB;IAIA,oBAAO;MAAI,KAAK,EAAEkB,SAAX;MAAA,UAAuBxB,OAAO,CAACN,GAAR,CAAY,CAAC4B,IAAD,EAAOK,UAAP,KAAsB;QAC9D,MAAMC,WAAW,GAAGD,UAAU,GAAI,kBAAiBA,UAAW,KAAIlB,OAAO,CAACN,YAAR,CAAqBwB,UAAU,GAAG,CAAlC,EAAqC,CAArC,CAAwC,OAAMlB,OAAO,CAACN,YAAR,CAAqBwB,UAAU,GAAG,CAAlC,EAAqC,CAArC,CAAwC,GAA1H,GAAgI,kBAA9J;QACA,oBAAQ;UAAA,uBAAqB;YAAQ,OAAO,EAAE,MAAKN,MAAM,CAACM,UAAD,CAA5B;YAAA,UAC5BC;UAD4B;YAAA;YAAA;YAAA;UAAA;QAArB,GAASD,UAAT;UAAA;UAAA;UAAA;QAAA,QAAR;MAEgB,CAJY;IAAvB;MAAA;MAAA;MAAA;IAAA,QAAP;EAKD;;EAED,IAAIE,MAAJ;;EACA,IAAIT,MAAJ,EAAY;IACVS,MAAM,GAAI,WAAUT,MAAO,EAA3B;EACD,CAFD,MAEO;IACLS,MAAM,GAAI,gBAAe/B,SAAS,CAACO,OAAV,GAAoB,GAApB,GAA0B,GAAI,EAAvD;EACD;;EAED,SAASyB,WAAT,GAAuB;IACrB/B,YAAY,CAAC,EACX,GAAGD,SADQ;MAEXQ,cAAc,EAAE,CAACR,SAAS,CAACQ;IAFhB,CAAD,CAAZ;EAID;;EAED,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MAAK,SAAS,EAAC,YAAf;MAAA,uBACE,QAAC,KAAD;QAAO,OAAO,EAAEG,OAAO,CAACjB,OAAxB;QAAiC,OAAO,EAAGD,CAAD,IAAMgB,WAAW,CAAChB,CAAD;MAA3D;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAA,UAAMsC;MAAN;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAEC,WAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,C,CAGH;;;GA/HSjC,I;;MAAAA,I;AAiIT,MAAMkC,IAAI,GAAGhD,QAAQ,CAACiD,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eAAY,QAAC,IAAD;EAAA;EAAA;EAAA;AAAA,QAAZ;;AAEA,SAASnB,eAAT,CAAyBxB,OAAzB,EAAkC;EAChC,MAAM4C,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;EAWA,KAAK,IAAI7C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6C,KAAK,CAAC1B,MAA1B,EAAkCnB,CAAC,EAAnC,EAAuC;IACrC,MAAM,CAAC8C,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYH,KAAK,CAAC7C,CAAD,CAAvB;;IACA,IAAIC,OAAO,CAAC6C,CAAD,CAAP,IAAc7C,OAAO,CAAC6C,CAAD,CAAP,KAAe7C,OAAO,CAAC8C,CAAD,CAApC,IAA2C9C,OAAO,CAAC6C,CAAD,CAAP,KAAe7C,OAAO,CAAC+C,CAAD,CAArE,EAA0E;MACxEvD,CAAC,CAAE,kBAAF,CAAD,CAAsBwD,GAAtB,CAA0B,kBAA1B,EAA8C,KAA9C;MACAxD,CAAC,CAAE,kBAAF,CAAD,CAAsBwD,GAAtB,CAA0B,kBAA1B,EAA8C,KAA9C;MACAxD,CAAC,CAAE,kBAAF,CAAD,CAAsBwD,GAAtB,CAA0B,kBAA1B,EAA8C,KAA9C;MAEA,OAAOhD,OAAO,CAAC6C,CAAD,CAAd;IACD;EACF;;EACD,OAAO,IAAP;AACD"},"metadata":{},"sourceType":"module"}